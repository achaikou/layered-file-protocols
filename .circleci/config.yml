version: 2.1

commands:
  install_build_deps:
    parameters:
      sudo:
        type: boolean
        default: false
      extra:
        type: string
        default: ""
    steps:
      - run:
          name: Install dependencies
          command: |
            <<#parameters.sudo >> sudo <</parameters.sudo >> apt-get update
            <<#parameters.sudo >> sudo <</parameters.sudo >> apt-get install \
            -y cmake g++ git libfmt-dev << parameters.extra >>

  cmake_build:
    description: Build and test
    parameters:
      type:
        description: Build type
        type: enum
        default: Release
        enum: ["Release", "Debug", "RelWithDebInfo"]
      scan:
        description: scan-build or similar command prefix
        type: string
        default: ""
      cmakeflags:
        description: Extra cmake flags
        type: string
        default: ""
      cxxflags:
        description: Extra c++ flags
        type: string
        default: ""
    steps:
      - run:
          name: Configure
          command: |
            mkdir build
            cd build
            << parameters.scan >> \
            cmake -DBUILD_SHARED_LIBS=ON \
                  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
                  -DCMAKE_BUILD_TYPE=<< parameters.type >> \
                  -DCMAKE_CXX_FLAGS=<< parameters.cxxflags >> \
                  << parameters.cmakeflags >> \
                  ..
      - run:
          name: Build and install
          command: << parameters.scan >> cmake --build build --target install
      - run:
          name: Test
          command: |
            cd build
            ctest --output-on-failure

jobs:
  gcc:
    docker:
      - image: debian:stable
    steps:
      - checkout
      - install_build_deps
      - cmake_build

  clang:
    docker:
      - image: debian:stable
    environment:
      CC: /usr/bin/clang
      CXX: /usr/bin/clang++
    steps:
      - checkout
      - install_build_deps:
          extra: clang
      - cmake_build

  debug:
    docker:
      - image: debian:stable
    steps:
      - checkout
      - install_build_deps
      - cmake_build:
          type: Debug
          cxxflags: -Werror

  docs-and-examples:
    docker:
      - image: debian:stable
    steps:
      - checkout
      - install_build_deps:
          extra: python3-breathe python3-sphinx doxygen
      - cmake_build:
          cmakeflags: -DBUILD_DOC=ON -DBUILD_EXAMPLES=ON

  scan-build:
    docker:
      - image: debian:stable
    steps:
      - checkout
      - install_build_deps:
          extra: clang clang-tools libfindbin-libs-perl
      - cmake_build:
          scan: scan-build --status-bugs

  ubsan:
    docker:
      - image: ubuntu:rolling
    environment:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - checkout
      - install_build_deps:
          extra: libubsan1
      - cmake_build:
          type: RelWithDebInfo
          cxxflags: -fsanitize=address,undefined

workflows:
  version: 2

  build:
    jobs:
  #    - gcc
  #    - clang
  #    - debug
  #    - docs-and-examples

  #static-analysis:
  #  jobs:
  #    - scan-build

  #runtime-analysis:
  #  jobs:
  #    - ubsan
